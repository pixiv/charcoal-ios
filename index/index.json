{"includedArchiveIdentifiers":["charcoal-ios.Charcoal"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"children":[{"title":"Creating SwiftUI Balloons","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalballoon(ispresenting:text:dismissafter:action:)","title":"func charcoalBalloon<Content>(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"title":"Creating UIKit Balloons","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalballoon\/show(text:anchorview:interactionmode:spacingtoscreen:gap:on:)","title":"static func show(text: String, anchorView: UIView, interactionMode: CharcoalOverlayInteractionMode, spacingToScreen: CGFloat, gap: CGFloat, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/balloons","title":"Charocal Balloons","type":"symbol"},{"children":[{"title":"Creating SwiftUI buttons","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalprimarybutton(size:isfixed:primarycolor:)","title":"func charcoalPrimaryButton(size: CharcoalButtonSize, isFixed: Bool, primaryColor: Color) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaldefaultbutton(size:isfixed:)","title":"func charcoalDefaultButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaldefaultoverlaybutton(size:isfixed:)","title":"func charcoalDefaultOverlayButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoallinkbutton()","title":"func charcoalLinkButton() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalnavigationbutton(size:isfixed:)","title":"func charcoalNavigationButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"title":"Creating UIKit buttons","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultmbutton","title":"CharcoalDefaultMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultsbutton","title":"CharcoalDefaultSButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton","title":"CharcoalDefaultOverlayMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton","title":"CharcoalDefaultOverlaySButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoallinkbutton","title":"CharcoalLinkButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalnavigationmbutton","title":"CharcoalNavigationMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalnavigationsbutton","title":"CharcoalNavigationSButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/primarycolor","title":"var primaryColor: UIColor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalprimarymbutton","title":"CharcoalPrimaryMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/primarycolor","title":"var primaryColor: UIColor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalprimarysbutton","title":"CharcoalPrimarySButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/ison","title":"var isOn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/register(onbutton:offbutton:)","title":"func register<T1, T2>(onButton: T1, offButton: T2)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalswitchingbutton","title":"CharcoalSwitchingButton","type":"class"}],"path":"\/documentation\/charcoal\/buttons","title":"Charocal Buttons","type":"symbol"},{"children":[{"title":"Creating SwiftUI Hints","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalhint\/init(text:subtitle:maxwidth:ispresenting:alignment:buttonstyle:action:)","title":"init(text: String, subtitle: String?, maxWidth: CGFloat?, isPresenting: Binding<Bool>, alignment: Alignment, buttonStyle: CharcoalButtonStyle, action: CharcoalAction?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalhint\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-1dhch","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-64wbt","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-4xg55","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-ddxn","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-j0o4","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-3w11","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-6vk8x","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-25xwg","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-6oj50","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-14gmr","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4a8n9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4elw6","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-5eok0","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-6b21h","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-8uvux","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-93s7w","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-sxys","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-49kx7","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-4dfs3","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-7h4u4","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-1s07r","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-269l0","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-910l4","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-4kr5w","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-77ofr","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-skzg","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-12fjz","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-3ynb3","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-5i5w1","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-6plih","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-70sc3","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-8946i","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-4fmoq","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-5vagm","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-6o9tj","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-2k30f","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-3yopv","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-7vsbz","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-1busj","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-84ml7","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-wxl5","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-3lw3d","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-7tlic","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-8weh3","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-17ygr","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-2ebn2","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-kl5j","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3hbpt","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3vvny","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-57mf6","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-5zybk","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-1ob7y","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-20do4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-43d1o","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-9il0h","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-6nsmp","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-7c31n","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-9qrbp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-prl","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-3bi4b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-70vp3","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-7pn0u","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-94pex","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-1ypxg","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-5u7ld","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-7zkio","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-5ajfe","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-8o9j6","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-98ix0","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-202zu","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-5b2qg","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-8perq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-4adso","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-8b3os","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-9h4bb","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-3i3fg","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-57emj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-864s0","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-5247d","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-642jq","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-66bi","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-82bn4","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-83ejs","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-4zccw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-8mjp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-56xkf","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-zowv","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-5e0ib","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-94dld","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-2ghvc","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-3sic7","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-48tsq","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-7agpt","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1s8sb","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1wip6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3n9cq","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4vq8i","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-91mz5","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2fdms","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4f3if","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8d0zd","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1mhyw","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5d6ea","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8o84q","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-54szg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-55pv8","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9afoq","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-3ehgp","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-8h71h","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-10iie","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-5k0oz","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-6481b","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-7gxcx","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-10uns","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-58p3j","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-9xs1c","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-46126","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-7r6l2","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-50fm2","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-697ow","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-9flc8","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2jg7c","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2qlli","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-3tixn","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5bxxy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5kjl9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-58p29","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7vcdt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4zaxx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-57el8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6s3cy","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7iwfl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3bup","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3f598","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-8s6ow","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-15175","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-4prze","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-1vxs9","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-95zqz","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-11wtw","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-1m64v","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-5wnfs","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-7rxqi","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-125md","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-78pj0","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-7jytk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-9q1ye","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-b0hw","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-1p9jm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-78v9c","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-5jatr","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-936nq","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-17b7l","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-2nmjw","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-8bwfa","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-3qph6","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-5e4z1","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-73sz9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-16s2b","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-gw20","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-1vzlj","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-4qd41","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7mijl","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7oo3f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-23der","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-51zpu","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-7qi80","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8wos2","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8x7a6","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-4xtn1","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-8laaf","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-3030f","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-4zkiu","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-2x5ff","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-9y1lx","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-5rexf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8hute","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8r094","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-t1o6","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-7ya2q","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-8l3qn","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-5197f","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-8eavb","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-37sbd","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-acbn","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-6nj9w","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-9wve7","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-6983x","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-9i1pj","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-80xki","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-8udez","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-3f362","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-5noon","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-3urcv","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-8o1df","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-2ewpy","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-zydq","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1mjm4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-24dib","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5xj5d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-5c7te","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-83en9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-8ypzj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-1c89l","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-5b1y5","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-9q55s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-4e6f1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-5s56o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-99py","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-5rufo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-6xkde","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-7i45f","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-1cjwf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-75xgs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-8a24y","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-48v3q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-65tz3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-9b0lm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3jhs0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4j7l4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-dsj8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2mjpt","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5cp6l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9d5hs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-6jd2o","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-8udzr","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-1c5mf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-94z8y","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-1i420","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-8f9ib","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-6mch1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-961yt","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-d9fe","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-3wmxu","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-ynmv","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalhint\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-1dhch","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-64wbt","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-4xg55","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-ddxn","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-j0o4","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-3w11","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-6vk8x","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-25xwg","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-6oj50","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-14gmr","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4a8n9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4elw6","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-5eok0","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-6b21h","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-8uvux","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-93s7w","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-sxys","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-49kx7","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-4dfs3","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-7h4u4","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-1s07r","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-269l0","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-910l4","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-4kr5w","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-77ofr","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-skzg","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-12fjz","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-3ynb3","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-5i5w1","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-6plih","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-70sc3","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-8946i","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-4fmoq","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-5vagm","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-6o9tj","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-2k30f","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-3yopv","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-7vsbz","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-1busj","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-84ml7","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-wxl5","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-3lw3d","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-7tlic","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-8weh3","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-17ygr","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-2ebn2","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-kl5j","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3hbpt","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3vvny","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-57mf6","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-5zybk","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-1ob7y","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-20do4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-43d1o","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-9il0h","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-6nsmp","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-7c31n","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-9qrbp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-prl","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-3bi4b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-70vp3","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-7pn0u","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-94pex","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-1ypxg","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-5u7ld","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-7zkio","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-5ajfe","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-8o9j6","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-98ix0","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-202zu","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-5b2qg","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-8perq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-4adso","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-8b3os","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-9h4bb","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-3i3fg","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-57emj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-864s0","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-5247d","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-642jq","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-66bi","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-82bn4","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-83ejs","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-4zccw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-8mjp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-56xkf","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-zowv","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-5e0ib","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-94dld","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-2ghvc","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-3sic7","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-48tsq","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-7agpt","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1s8sb","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1wip6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3n9cq","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4vq8i","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-91mz5","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2fdms","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4f3if","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8d0zd","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1mhyw","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5d6ea","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8o84q","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-54szg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-55pv8","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9afoq","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-3ehgp","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-8h71h","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-10iie","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-5k0oz","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-6481b","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-7gxcx","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-10uns","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-58p3j","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-9xs1c","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-46126","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-7r6l2","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-50fm2","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-697ow","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-9flc8","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2jg7c","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2qlli","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-3tixn","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5bxxy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5kjl9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-58p29","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7vcdt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4zaxx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-57el8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6s3cy","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7iwfl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3bup","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3f598","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-8s6ow","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-15175","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-4prze","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-1vxs9","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-95zqz","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-11wtw","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-1m64v","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-5wnfs","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-7rxqi","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-125md","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-78pj0","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-7jytk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-9q1ye","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-b0hw","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-1p9jm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-78v9c","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-5jatr","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-936nq","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-17b7l","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-2nmjw","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-8bwfa","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-3qph6","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-5e4z1","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-73sz9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-16s2b","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-gw20","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-1vzlj","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-4qd41","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7mijl","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7oo3f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-23der","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-51zpu","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-7qi80","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8wos2","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8x7a6","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-4xtn1","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-8laaf","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-3030f","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-4zkiu","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-2x5ff","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-9y1lx","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-5rexf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8hute","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8r094","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-t1o6","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-7ya2q","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-8l3qn","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-5197f","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-8eavb","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-37sbd","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-acbn","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-6nj9w","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-9wve7","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-6983x","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-9i1pj","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-80xki","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-8udez","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-3f362","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-5noon","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-3urcv","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-8o1df","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-2ewpy","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-zydq","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1mjm4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-24dib","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5xj5d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-5c7te","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-83en9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-8ypzj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-1c89l","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-5b1y5","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-9q55s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-4e6f1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-5s56o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-99py","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-5rufo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-6xkde","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-7i45f","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-1cjwf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-75xgs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-8a24y","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-48v3q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-65tz3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-9b0lm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3jhs0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4j7l4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-dsj8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2mjpt","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5cp6l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9d5hs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-6jd2o","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-8udzr","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-1c5mf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-94z8y","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-1i420","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-8f9ib","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-6mch1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-961yt","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-d9fe","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-3wmxu","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-ynmv","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalhint\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalhint","title":"CharcoalHint","type":"struct"},{"title":"Creating UIKit Hints","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalhintview\/init(text:action:)","title":"init(text: String, action: CharcoalAction?)","type":"init"}],"path":"\/documentation\/charcoal\/charcoalhintview","title":"CharcoalHintView","type":"class"}],"path":"\/documentation\/charcoal\/hints","title":"Charocal Hints","type":"symbol"},{"children":[{"title":"Creating SwiftUI Modals","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalmodal(title:style:tapbackgroundtodismiss:duration:maxwidth:ispresented:actions:content:)","title":"func charcoalModal(title: String?, style: CharcoalModalStyle, tapBackgroundToDismiss: Bool, duration: Double, maxWidth: CGFloat, isPresented: Binding<Bool>, actions: () -> some View, content: () -> some View) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/modals","title":"Charocal Modals","type":"symbol"},{"children":[{"title":"Creating SwiftUI Spinners","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalspinner(ispresenting:spinnersize:transparentbackground:interactionpassthrough:)","title":"func charcoalSpinner(isPresenting: Binding<Bool>, spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool) -> some View","type":"method"},{"title":"Creating UIKit Spinners","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.class\/show(spinnersize:transparentbackground:interactionpassthrough:on:)","title":"class func show(spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool, on: UIView?)","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.class\/dismiss()","title":"class func dismiss()","type":"method"}],"path":"\/documentation\/charcoal\/spinners","title":"Charocal Spinners","type":"symbol"},{"children":[{"title":"Creating SwiftUI Toggle","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltoggle()","title":"func charcoalToggle() -> some View","type":"method"},{"title":"Creating UIKit Switch","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalswitch\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalswitch\/ison","title":"var isOn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalswitch","title":"CharcoalSwitch","type":"class"}],"path":"\/documentation\/charcoal\/switch","title":"Charocal Switches","type":"symbol"},{"children":[{"title":"Creating SwiftUI TextFields","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltextfield(label:countlabel:assistivetext:haserror:)","title":"func charcoalTextField(label: Binding<String>, countLabel: Binding<String>, assistiveText: Binding<String>, hasError: Binding<Bool>) -> some View","type":"method"},{"title":"Creating UIKit TextFields","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/lengthlimit","title":"var lengthLimit: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/editingrect(forbounds:)","title":"func editingRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/placeholderrect(forbounds:)","title":"func placeholderRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/resignfirstresponder()","title":"func resignFirstResponder() -> Bool","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/rightviewrect(forbounds:)","title":"func rightViewRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/setassertiveborder()","title":"func setAssertiveBorder()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/setbrandborder()","title":"func setBrandBorder()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/textrect(forbounds:)","title":"func textRect(forBounds: CGRect) -> CGRect","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltextfield","title":"CharcoalTextField","type":"class"}],"path":"\/documentation\/charcoal\/textfields","title":"Charocal TextFields","type":"symbol"},{"children":[{"title":"Creating SwiftUI Toasts","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltoast(ispresenting:screenedge:screenedgespacing:text:dismissafter:appearance:animationconfiguration:action:)","title":"func charcoalToast<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, dismissAfter: TimeInterval?, appearance: CharcoalToastAppearance, animationConfiguration: CharcoalToastAnimationConfiguration, action: () -> Content) -> some View","type":"method"},{"title":"Creating SwiftUI Snackbars","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsnackbar(ispresenting:screenedge:screenedgespacing:text:thumbnailimage:dismissafter:action:)","title":"func charcoalSnackBar<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, thumbnailImage: Image?, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"title":"Creating UIKit Toasts","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoast\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltoast\/show(text:maxwidth:appearance:screenedge:screenedgespacing:actioncallback:on:)","title":"static func show(text: String, maxWidth: CGFloat, appearance: CharcoalToastAppearance, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, actionCallback: ActionCallback?, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltoast","title":"CharcoalToast","type":"class"},{"title":"Creating UIKit Snackbars","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsnackbar\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoalsnackbar\/show(text:maxwidth:thumbnailimage:screenedge:screenedgespacing:action:on:)","title":"static func show(text: String, maxWidth: CGFloat, thumbnailImage: UIImage?, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, action: CharcoalAction?, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoalsnackbar","title":"CharcoalSnackBar","type":"class"}],"path":"\/documentation\/charcoal\/toasts","title":"Charocal Toasts","type":"symbol"},{"children":[{"title":"Creating SwiftUI Tooltips","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/background(charcoalcolor:ignoressafeareaedges:)","title":"func background(charcoalColor: CharcoalAsset.ColorPaletteGenerated, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalbackground1()","title":"func charcoalBackground1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalbackground2()","title":"func charcoalBackground2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalballoon(ispresenting:text:dismissafter:action:)","title":"func charcoalBalloon<Content>(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaldefaultbutton(size:isfixed:)","title":"func charcoalDefaultButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaldefaultoverlaybutton(size:isfixed:)","title":"func charcoalDefaultOverlayButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoallinkbutton()","title":"func charcoalLinkButton() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalmodal(title:style:tapbackgroundtodismiss:duration:maxwidth:ispresented:actions:content:)","title":"func charcoalModal(title: String?, style: CharcoalModalStyle, tapBackgroundToDismiss: Bool, duration: Double, maxWidth: CGFloat, isPresented: Binding<Bool>, actions: () -> some View, content: () -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalnavigationbutton(size:isfixed:)","title":"func charcoalNavigationButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfaceborder()","title":"func charcoalOnSurfaceBorder() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacelink1()","title":"func charcoalOnSurfaceLink1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacelink2()","title":"func charcoalOnSurfaceLink2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext1()","title":"func charcoalOnSurfaceText1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext2()","title":"func charcoalOnSurfaceText2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext3()","title":"func charcoalOnSurfaceText3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext4()","title":"func charcoalOnSurfaceText4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext5()","title":"func charcoalOnSurfaceText5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaloverlaycontainer()","title":"func charcoalOverlayContainer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalprimarybutton(size:isfixed:primarycolor:)","title":"func charcoalPrimaryButton(size: CharcoalButtonSize, isFixed: Bool, primaryColor: Color) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsnackbar(ispresenting:screenedge:screenedgespacing:text:thumbnailimage:dismissafter:action:)","title":"func charcoalSnackBar<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, thumbnailImage: Image?, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalspinner(ispresenting:spinnersize:transparentbackground:interactionpassthrough:)","title":"func charcoalSpinner(isPresenting: Binding<Bool>, spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface1()","title":"func charcoalSurface1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface2()","title":"func charcoalSurface2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface3()","title":"func charcoalSurface3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface4()","title":"func charcoalSurface4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface5()","title":"func charcoalSurface5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface6()","title":"func charcoalSurface6() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface7()","title":"func charcoalSurface7() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface8()","title":"func charcoalSurface8() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface9()","title":"func charcoalSurface9() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltextfield(label:countlabel:assistivetext:haserror:)","title":"func charcoalTextField(label: Binding<String>, countLabel: Binding<String>, assistiveText: Binding<String>, hasError: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltoast(ispresenting:screenedge:screenedgespacing:text:dismissafter:appearance:animationconfiguration:action:)","title":"func charcoalToast<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, dismissAfter: TimeInterval?, appearance: CharcoalToastAppearance, animationConfiguration: CharcoalToastAnimationConfiguration, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltoggle()","title":"func charcoalToggle() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltooltip(ispresenting:text:dismissafter:)","title":"func charcoalTooltip(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10bold(issingleline:)","title":"func charcoalTypography10Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10boldmono()","title":"func charcoalTypography10BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10regular(issingleline:)","title":"func charcoalTypography10Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10regularmono()","title":"func charcoalTypography10RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12bold(issingleline:)","title":"func charcoalTypography12Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12boldmono()","title":"func charcoalTypography12BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12regular(issingleline:)","title":"func charcoalTypography12Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12regularmono()","title":"func charcoalTypography12RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14bold(issingleline:)","title":"func charcoalTypography14Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14boldmono()","title":"func charcoalTypography14BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14regular(issingleline:)","title":"func charcoalTypography14Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14regularmono()","title":"func charcoalTypography14RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16bold(issingleline:)","title":"func charcoalTypography16Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16boldmono()","title":"func charcoalTypography16BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16regular(issingleline:)","title":"func charcoalTypography16Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16regularmono()","title":"func charcoalTypography16RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20bold(issingleline:)","title":"func charcoalTypography20Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20boldmono()","title":"func charcoalTypography20BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20regular(issingleline:)","title":"func charcoalTypography20Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20regularmono()","title":"func charcoalTypography20RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/foregroundstyle(charcoalcolor:)","title":"func foregroundStyle(charcoalColor: CharcoalAsset.ColorPaletteGenerated) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/swiftuicore\/view","title":"View","type":"extension"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltooltip(ispresenting:text:dismissafter:)","title":"func charcoalTooltip(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?) -> some View","type":"method"},{"title":"Creating UIKit Tooltips","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/show(text:anchorview:on:)","title":"static func show(text: String, anchorView: UIView, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltooltip","title":"CharcoalTooltip","type":"class"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/show(text:anchorview:on:)","title":"static func show(text: String, anchorView: UIView, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"}],"path":"\/documentation\/charcoal\/tooltips","title":"Charocal Tooltips","type":"symbol"},{"children":[{"title":"Creating SwiftUI Typographies","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10bold(issingleline:)","title":"func charcoalTypography10Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10regular(issingleline:)","title":"func charcoalTypography10Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10boldmono()","title":"func charcoalTypography10BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10regularmono()","title":"func charcoalTypography10RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12bold(issingleline:)","title":"func charcoalTypography12Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12regular(issingleline:)","title":"func charcoalTypography12Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12boldmono()","title":"func charcoalTypography12BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12regularmono()","title":"func charcoalTypography12RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14bold(issingleline:)","title":"func charcoalTypography14Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14regular(issingleline:)","title":"func charcoalTypography14Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14boldmono()","title":"func charcoalTypography14BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14regularmono()","title":"func charcoalTypography14RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16bold(issingleline:)","title":"func charcoalTypography16Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16regular(issingleline:)","title":"func charcoalTypography16Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16boldmono()","title":"func charcoalTypography16BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16regularmono()","title":"func charcoalTypography16RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20bold(issingleline:)","title":"func charcoalTypography20Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20regular(issingleline:)","title":"func charcoalTypography20Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20boldmono()","title":"func charcoalTypography20BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20regularmono()","title":"func charcoalTypography20RegularMono() -> some View","type":"method"},{"title":"Creating UIKit Typographies","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography10\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography10\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography10","title":"CharcoalTypography10","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography12\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography12\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography12","title":"CharcoalTypography12","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography14\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography14\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography14","title":"CharcoalTypography14","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography16\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography16\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography16","title":"CharcoalTypography16","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography20\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography20\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography20","title":"CharcoalTypography20","type":"class"}],"path":"\/documentation\/charcoal\/typographies","title":"Charocal Typographies","type":"symbol"},{"icon":"charcoal-icon.png","path":"\/documentation\/charcoal\/dynamictype","title":"Charocal Dynamic Type","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalballoon\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoalballoon\/positionofoverlay(targetframe:tooltipsize:canvasgeometrysize:spacingtoscreen:arrowheight:spacingtotarget:)","title":"static func positionOfOverlay(targetFrame: CGRect, tooltipSize: CGSize, canvasGeometrySize: CGSize, spacingToScreen: CGFloat, arrowHeight: CGFloat, spacingToTarget: CGFloat) -> CGSize","type":"method"},{"path":"\/documentation\/charcoal\/charcoalballoon\/show(text:anchorview:interactionmode:spacingtoscreen:gap:on:)","title":"static func show(text: String, anchorView: UIView, interactionMode: CharcoalOverlayInteractionMode, spacingToScreen: CGFloat, gap: CGFloat, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"},{"path":"\/documentation\/charcoal\/charcoalballoon\/tooltipx(anchorframe:tooltipsize:canvasgeometrysize:spacingtoscreen:)","title":"static func tooltipX(anchorFrame: CGRect, tooltipSize: CGSize, canvasGeometrySize: CGSize, spacingToScreen: CGFloat) -> CGFloat","type":"method"}],"path":"\/documentation\/charcoal\/charcoalballoon","title":"CharcoalBalloon","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultmbutton","title":"CharcoalDefaultMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton","title":"CharcoalDefaultOverlayMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton","title":"CharcoalDefaultOverlaySButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultsbutton","title":"CharcoalDefaultSButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalhintview\/init(text:action:)","title":"init(text: String, action: CharcoalAction?)","type":"init"}],"path":"\/documentation\/charcoal\/charcoalhintview","title":"CharcoalHintView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/id","title":"let id: CharcoalIdentifiableOverlayView.IDValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/hittest(_:with:)","title":"func hitTest(CGPoint, with: UIEvent?) -> UIView?","type":"method"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/touchesbegan(_:with:)","title":"func touchesBegan(Set<UITouch>, with: UIEvent?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/actioncomplete","title":"CharcoalIdentifiableOverlayView.ActionComplete","type":"typealias"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/actioncontent","title":"CharcoalIdentifiableOverlayView.ActionContent","type":"typealias"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/idvalue","title":"CharcoalIdentifiableOverlayView.IDValue","type":"typealias"}],"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview","title":"CharcoalIdentifiableOverlayView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoallinkbutton","title":"CharcoalLinkButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalnavigationmbutton","title":"CharcoalNavigationMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalnavigationsbutton","title":"CharcoalNavigationSButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/primarycolor","title":"var primaryColor: UIColor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalprimarymbutton","title":"CharcoalPrimaryMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/primarycolor","title":"var primaryColor: UIColor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalprimarysbutton","title":"CharcoalPrimarySButton","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsnackbar\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoalsnackbar\/show(text:maxwidth:thumbnailimage:screenedge:screenedgespacing:action:on:)","title":"static func show(text: String, maxWidth: CGFloat, thumbnailImage: UIImage?, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, action: CharcoalAction?, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoalsnackbar","title":"CharcoalSnackBar","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.class\/dismiss()","title":"class func dismiss()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.class\/show(spinnersize:transparentbackground:interactionpassthrough:on:)","title":"class func show(spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool, on: UIView?)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.class","title":"CharcoalSpinner","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalswitch\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalswitch\/ison","title":"var isOn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalswitch","title":"CharcoalSwitch","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/ison","title":"var isOn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/register(onbutton:offbutton:)","title":"func register<T1, T2>(onButton: T1, offButton: T2)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalswitchingbutton","title":"CharcoalSwitchingButton","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/lengthlimit","title":"var lengthLimit: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/editingrect(forbounds:)","title":"func editingRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/placeholderrect(forbounds:)","title":"func placeholderRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/resignfirstresponder()","title":"func resignFirstResponder() -> Bool","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/rightviewrect(forbounds:)","title":"func rightViewRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/setassertiveborder()","title":"func setAssertiveBorder()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/setbrandborder()","title":"func setBrandBorder()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/textrect(forbounds:)","title":"func textRect(forBounds: CGRect) -> CGRect","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltextfield","title":"CharcoalTextField","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/assertivetext","title":"var assertiveText: String?","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/charcoaltextfield","title":"var charcoalTextField: CharcoalTextField","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/delegate","title":"var delegate: (any CharcoalTextFieldViewDelegate)?","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/isuserinteractionenabled","title":"var isUserInteractionEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/lengthlimit","title":"var lengthLimit: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/placeholder","title":"var placeholder: String?","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/title","title":"var title: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/hideassertivetext()","title":"func hideAssertiveText()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/sethaserror(_:)","title":"func setHasError(Bool)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/showassertivetext(text:)","title":"func showAssertiveText(text: String)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/updatecountlabel(text:haserror:)","title":"func updateCountLabel(text: String, hasError: Bool)","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltextfieldview","title":"CharcoalTextFieldView","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoast\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltoast\/show(text:maxwidth:appearance:screenedge:screenedgespacing:actioncallback:on:)","title":"static func show(text: String, maxWidth: CGFloat, appearance: CharcoalToastAppearance, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, actionCallback: ActionCallback?, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltoast","title":"CharcoalToast","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/show(text:anchorview:on:)","title":"static func show(text: String, anchorView: UIView, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltooltip","title":"CharcoalTooltip","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography10\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography10\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography10","title":"CharcoalTypography10","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography12\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography12\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography12","title":"CharcoalTypography12","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography14\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography14\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography14","title":"CharcoalTypography14","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography16\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography16\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography16","title":"CharcoalTypography16","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography20\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography20\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography20","title":"CharcoalTypography20","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/isbold","title":"var isBold: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/ismono","title":"var isMono: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/lineheight","title":"var lineHeight: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltypographylabel","title":"CharcoalTypographyLabel","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/colorasset\/color-swift.property","title":"var color: ColorAsset.Color","type":"property"},{"path":"\/documentation\/charcoal\/colorasset\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/charcoal\/colorasset\/swiftuicolor","title":"var swiftUIColor: Color","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/colorasset\/color(compatiblewith:)","title":"func color(compatibleWith: UITraitCollection) -> ColorAsset.Color","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/colorasset\/color-swift.typealias","title":"ColorAsset.Color","type":"typealias"}],"path":"\/documentation\/charcoal\/colorasset","title":"ColorAsset","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalbutton","title":"CharcoalButton","type":"protocol"},{"path":"\/documentation\/charcoal\/charcoalbuttonmodifier","title":"CharcoalButtonModifier","type":"protocol"},{"path":"\/documentation\/charcoal\/charcoaltextfieldviewdelegate","title":"CharcoalTextFieldViewDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalaction\/init(title:actioncallback:)","title":"init(title: String, actionCallback: ActionCallback)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalaction\/actioncallback","title":"let actionCallback: ActionCallback","type":"property"},{"path":"\/documentation\/charcoal\/charcoalaction\/title","title":"let title: String","type":"property"}],"path":"\/documentation\/charcoal\/charcoalaction","title":"CharcoalAction","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/init(_:using:)","title":"init(String, using: String.Encoding) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/init(fromurl:)","title":"init(fromURL: URL) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/init(the4:the8:the16:the24:none:oval:)","title":"init(the4: Int, the8: Int, the16: Int, the24: Int, none: Int, oval: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/none","title":"let none: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/oval","title":"let oval: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/the16","title":"let the16: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/the24","title":"let the24: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/the4","title":"let the4: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/the8","title":"let the8: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/jsondata()","title":"func jsonData() throws -> Data","type":"method"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/jsonstring(encoding:)","title":"func jsonString(encoding: String.Encoding) throws -> String?","type":"method"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/with(the4:the8:the16:the24:none:oval:)","title":"func with(the4: Int?, the8: Int?, the16: Int?, the24: Int?, none: Int?, oval: Int?) -> CharcoalBorderRadius","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/none","title":"case none","type":"case"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/oval","title":"case oval","type":"case"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/the16","title":"case the16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/the24","title":"case the24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/the4","title":"case the4","type":"case"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/the8","title":"case the8","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalborderradius\/codingkeys","title":"CharcoalBorderRadius.CodingKeys","type":"enum"}],"path":"\/documentation\/charcoal\/charcoalborderradius","title":"CharcoalBorderRadius","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalconfig\/uikitconfigs\/fixedsizecategory","title":"var fixedSizeCategory: UIContentSizeCategory?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalconfig\/uikitconfigs\/default","title":"static let `default`: CharcoalConfig.UIKitConfigs","type":"property"}],"path":"\/documentation\/charcoal\/charcoalconfig\/uikitconfigs","title":"CharcoalConfig.UIKitConfigs","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalconfig\/configuikit","title":"static var configUIKit: CharcoalConfig.UIKitConfigs","type":"property"}],"path":"\/documentation\/charcoal\/charcoalconfig","title":"CharcoalConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/init(_:using:)","title":"init(String, using: String.Encoding) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/init(borderradius:spacing:typography:)","title":"init(borderRadius: CharcoalBorderRadius, spacing: CharcoalSpacing, typography: CharcoalTypography)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/init(fromurl:)","title":"init(fromURL: URL) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/borderradius","title":"let borderRadius: CharcoalBorderRadius","type":"property"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/spacing","title":"let spacing: CharcoalSpacing","type":"property"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/typography","title":"let typography: CharcoalTypography","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/jsondata()","title":"func jsonData() throws -> Data","type":"method"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/jsonstring(encoding:)","title":"func jsonString(encoding: String.Encoding) throws -> String?","type":"method"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct\/with(borderradius:spacing:typography:)","title":"func with(borderRadius: CharcoalBorderRadius?, spacing: CharcoalSpacing?, typography: CharcoalTypography?) -> CharcoalFoundation","type":"method"}],"path":"\/documentation\/charcoal\/charcoalfoundation-swift.struct","title":"CharcoalFoundation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalhint\/init(text:subtitle:maxwidth:ispresenting:alignment:buttonstyle:action:)","title":"init(text: String, subtitle: String?, maxWidth: CGFloat?, isPresenting: Binding<Bool>, alignment: Alignment, buttonStyle: CharcoalButtonStyle, action: CharcoalAction?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalhint\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-1dhch","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-64wbt","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-4xg55","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-ddxn","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-j0o4","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-3w11","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-6vk8x","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-25xwg","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-6oj50","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-14gmr","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4a8n9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4elw6","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-5eok0","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-6b21h","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-8uvux","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-93s7w","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-sxys","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-49kx7","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-4dfs3","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-7h4u4","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-1s07r","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-269l0","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-910l4","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-4kr5w","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-77ofr","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-skzg","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-12fjz","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-3ynb3","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-5i5w1","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-6plih","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-70sc3","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-8946i","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-4fmoq","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-5vagm","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-6o9tj","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-2k30f","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-3yopv","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-7vsbz","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-1busj","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-84ml7","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-wxl5","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-3lw3d","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-7tlic","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-8weh3","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-17ygr","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-2ebn2","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-kl5j","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3hbpt","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3vvny","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-57mf6","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-5zybk","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-1ob7y","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-20do4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-43d1o","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-9il0h","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-6nsmp","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-7c31n","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-9qrbp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-prl","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-3bi4b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-70vp3","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-7pn0u","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-94pex","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-1ypxg","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-5u7ld","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-7zkio","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-5ajfe","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-8o9j6","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-98ix0","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-202zu","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-5b2qg","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-8perq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-4adso","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-8b3os","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-9h4bb","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-3i3fg","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-57emj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-864s0","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-5247d","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-642jq","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-66bi","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-82bn4","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-83ejs","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-4zccw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-8mjp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-56xkf","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-zowv","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-5e0ib","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-94dld","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-2ghvc","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-3sic7","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-48tsq","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-7agpt","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1s8sb","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1wip6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3n9cq","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4vq8i","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-91mz5","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2fdms","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4f3if","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8d0zd","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1mhyw","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5d6ea","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8o84q","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-54szg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-55pv8","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9afoq","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-3ehgp","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-8h71h","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-10iie","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-5k0oz","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-6481b","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-7gxcx","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-10uns","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-58p3j","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-9xs1c","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-46126","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-7r6l2","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-50fm2","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-697ow","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-9flc8","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2jg7c","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2qlli","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-3tixn","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5bxxy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5kjl9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-58p29","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7vcdt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4zaxx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-57el8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6s3cy","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7iwfl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3bup","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3f598","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-8s6ow","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-15175","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-4prze","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-1vxs9","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-95zqz","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-11wtw","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-1m64v","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-5wnfs","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-7rxqi","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-125md","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-78pj0","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-7jytk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-9q1ye","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-b0hw","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-1p9jm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-78v9c","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-5jatr","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-936nq","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-17b7l","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-2nmjw","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-8bwfa","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-3qph6","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-5e4z1","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-73sz9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-16s2b","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-gw20","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-1vzlj","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-4qd41","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7mijl","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7oo3f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-23der","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-51zpu","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-7qi80","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8wos2","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8x7a6","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-4xtn1","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-8laaf","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-3030f","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-4zkiu","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-2x5ff","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-9y1lx","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-5rexf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8hute","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8r094","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-t1o6","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-7ya2q","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-8l3qn","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-5197f","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-8eavb","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-37sbd","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-acbn","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-6nj9w","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-9wve7","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-6983x","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-9i1pj","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-80xki","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-8udez","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-3f362","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-5noon","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-3urcv","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-8o1df","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-2ewpy","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-zydq","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1mjm4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-24dib","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5xj5d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-5c7te","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-83en9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-8ypzj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-1c89l","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-5b1y5","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-9q55s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-4e6f1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-5s56o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-99py","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-5rufo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-6xkde","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-7i45f","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-1cjwf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-75xgs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-8a24y","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-48v3q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-65tz3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-9b0lm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3jhs0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4j7l4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-dsj8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2mjpt","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5cp6l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9d5hs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-6jd2o","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-8udzr","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-1c5mf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-94z8y","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-1i420","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-8f9ib","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-6mch1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-961yt","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-d9fe","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-3wmxu","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-ynmv","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalhint\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-1dhch","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(activationpoint:)-64wbt","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-4xg55","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-ddxn","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaction(named:_:)-j0o4","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-3w11","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:)-6vk8x","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-25xwg","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityactivationpoint(_:isenabled:)-6oj50","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-14gmr","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4a8n9","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-4elw6","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-5eok0","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-6b21h","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-8uvux","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-93s7w","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitycustomcontent(_:_:importance:)-sxys","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-49kx7","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-4dfs3","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:)-7h4u4","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-1s07r","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-269l0","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydragpoint(_:description:isenabled:)-910l4","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-4kr5w","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-77ofr","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:)-skzg","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-12fjz","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-3ynb3","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitydroppoint(_:description:isenabled:)-5i5w1","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-6plih","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-70sc3","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:)-8946i","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-4fmoq","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-5vagm","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityhint(_:isenabled:)-6o9tj","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-2k30f","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-3yopv","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:)-7vsbz","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-1busj","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-84ml7","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityinputlabels(_:isenabled:)-wxl5","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-3lw3d","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-7tlic","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:)-8weh3","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-17ygr","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-2ebn2","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(_:isenabled:)-kl5j","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3hbpt","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-3vvny","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-57mf6","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:)-5zybk","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-1ob7y","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-20do4","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-43d1o","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entryid:entrylabel:)-9il0h","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-6nsmp","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-7c31n","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-9qrbp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:entries:entrylabel:)-prl","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-3bi4b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-70vp3","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-7pn0u","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotor(_:textranges:)-94pex","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-1ypxg","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-5u7ld","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:)-7zkio","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-5ajfe","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-8o9j6","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityvalue(_:isenabled:)-98ix0","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-202zu","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-5b2qg","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:)-8perq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-4adso","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-8b3os","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:actions:message:)-9h4bb","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-3i3fg","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-57emj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:)-864s0","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-5247d","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-642jq","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(_:ispresented:presenting:actions:message:)-66bi","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-82bn4","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alignmentguide(_:computevalue:)-83ejs","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-4zccw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/aspectratio(_:contentmode:)-8mjp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-56xkf","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(_:in:fillstyle:)-zowv","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-5e0ib","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/background(in:fillstyle:)-94dld","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-2ghvc","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-3sic7","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-48tsq","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badge(_:)-7agpt","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1s8sb","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/buttonstyle(_:)-1wip6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3n9cq","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4vq8i","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:)-91mz5","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2fdms","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4f3if","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8d0zd","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1mhyw","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5d6ea","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8o84q","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-54szg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-55pv8","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9afoq","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-3ehgp","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:_:for:)-8h71h","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-10iie","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttoolbar(for:content:)-5k0oz","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-6481b","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaulthovereffect(_:)-7gxcx","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-10uns","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-58p3j","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(_:issuppressed:)-9xs1c","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-46126","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/dynamictypesize(_:)-7r6l2","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-50fm2","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-697ow","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogconfirmationlabel(_:)-9flc8","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2jg7c","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-2qlli","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogmessage(_:)-3tixn","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5bxxy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5kjl9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-58p29","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7vcdt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4zaxx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttype:oncompletion:)-57el8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6s3cy","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7iwfl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3bup","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-3f598","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileexporterfilenamelabel(_:)-8s6ow","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-15175","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedobject(_:)-4prze","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-1vxs9","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedsceneobject(_:)-95zqz","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-11wtw","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedscenevalue(_:_:)-1m64v","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-5wnfs","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/focusedvalue(_:_:)-7rxqi","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-125md","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-78pj0","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/help(_:)-7jytk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-9q1ye","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffect(_:isenabled:)-b0hw","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-1p9jm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listitemtint(_:)-78v9c","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-5jatr","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/listsectionspacing(_:)-936nq","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-17b7l","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-2nmjw","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:)-8bwfa","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-3qph6","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-5e4z1","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitle(_:displaymode:)-73sz9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-16s2b","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:)-gw20","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-1vzlj","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-4qd41","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7mijl","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationdocument(_:preview:)-7oo3f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-23der","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-51zpu","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-7qi80","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8wos2","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtitle(_:)-8x7a6","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-4xtn1","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:initial:_:)-8laaf","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-3030f","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/oncontinuoushover(coordinatespace:perform:)-4zkiu","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-2x5ff","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:delegate:)-9y1lx","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-5rexf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8hute","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-8r094","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ondrop(of:istargeted:perform:)-t1o6","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-7ya2q","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ongeometrychange(for:of:action:)-8l3qn","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-5197f","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollphasechange(_:)-8eavb","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-37sbd","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:coordinatespace:perform:)-acbn","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-6nj9w","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:)-9wve7","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-6983x","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/renameaction(_:)-9i1pj","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-80xki","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareainset(edge:alignment:spacing:content:)-8udez","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-3f362","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:)-5noon","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-3urcv","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(_:anchor:)-8o1df","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-2ewpy","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchcompletion(_:)-zydq","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1mjm4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-24dib","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5xj5d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-5c7te","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-83en9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:editabletokens:placement:prompt:token:)-8ypzj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-1c89l","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-5b1y5","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:ispresented:placement:prompt:)-9q55s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-4e6f1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-5s56o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:)-99py","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-5rufo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-6xkde","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:placement:prompt:suggestions:)-7i45f","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-1cjwf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-75xgs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:ispresented:placement:prompt:token:)-8a24y","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-48v3q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-65tz3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:placement:prompt:token:)-9b0lm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3jhs0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4j7l4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-dsj8","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2mjpt","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5cp6l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9d5hs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-6jd2o","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tint(_:)-8udzr","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-1c5mf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(content:)-94z8y","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-1i420","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackground(_:for:)-8f9ib","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-6mch1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-961yt","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typeselectequivalent(_:)-d9fe","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-3wmxu","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/typesettinglanguage(_:isenabled:)-ynmv","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalhint\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalhint\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalhint","title":"CharcoalHint","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/init(_:using:)","title":"init(String, using: String.Encoding) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalsize\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalsize\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalsize\/init(fromurl:)","title":"init(fromURL: URL) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalsize\/init(the12:the14:the16:the20:the32:)","title":"init(the12: CharcoalThe12, the14: CharcoalThe12, the16: CharcoalThe12, the20: CharcoalThe12, the32: CharcoalThe12)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/the12","title":"let the12: CharcoalThe12","type":"property"},{"path":"\/documentation\/charcoal\/charcoalsize\/the14","title":"let the14: CharcoalThe12","type":"property"},{"path":"\/documentation\/charcoal\/charcoalsize\/the16","title":"let the16: CharcoalThe12","type":"property"},{"path":"\/documentation\/charcoal\/charcoalsize\/the20","title":"let the20: CharcoalThe12","type":"property"},{"path":"\/documentation\/charcoal\/charcoalsize\/the32","title":"let the32: CharcoalThe12","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/jsondata()","title":"func jsonData() throws -> Data","type":"method"},{"path":"\/documentation\/charcoal\/charcoalsize\/jsonstring(encoding:)","title":"func jsonString(encoding: String.Encoding) throws -> String?","type":"method"},{"path":"\/documentation\/charcoal\/charcoalsize\/with(the12:the14:the16:the20:the32:)","title":"func with(the12: CharcoalThe12?, the14: CharcoalThe12?, the16: CharcoalThe12?, the20: CharcoalThe12?, the32: CharcoalThe12?) -> CharcoalSize","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/the12","title":"case the12","type":"case"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/the14","title":"case the14","type":"case"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/the16","title":"case the16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/the20","title":"case the20","type":"case"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/the32","title":"case the32","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalsize\/codingkeys","title":"CharcoalSize.CodingKeys","type":"enum"}],"path":"\/documentation\/charcoal\/charcoalsize","title":"CharcoalSize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/init(_:using:)","title":"init(String, using: String.Encoding) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalspacing\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalspacing\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalspacing\/init(fromurl:)","title":"init(fromURL: URL) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalspacing\/init(the0:the4:the8:the16:the24:the40:the64:the104:the168:the272:the440:)","title":"init(the0: Int, the4: Int, the8: Int, the16: Int, the24: Int, the40: Int, the64: Int, the104: Int, the168: Int, the272: Int, the440: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the0","title":"let the0: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the104","title":"let the104: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the16","title":"let the16: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the168","title":"let the168: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the24","title":"let the24: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the272","title":"let the272: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the4","title":"let the4: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the40","title":"let the40: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the440","title":"let the440: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the64","title":"let the64: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/the8","title":"let the8: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/jsondata()","title":"func jsonData() throws -> Data","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspacing\/jsonstring(encoding:)","title":"func jsonString(encoding: String.Encoding) throws -> String?","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspacing\/with(the0:the4:the8:the16:the24:the40:the64:the104:the168:the272:the440:)","title":"func with(the0: Int?, the4: Int?, the8: Int?, the16: Int?, the24: Int?, the40: Int?, the64: Int?, the104: Int?, the168: Int?, the272: Int?, the440: Int?) -> CharcoalSpacing","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the0","title":"case the0","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the104","title":"case the104","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the16","title":"case the16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the168","title":"case the168","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the24","title":"case the24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the272","title":"case the272","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the4","title":"case the4","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the40","title":"case the40","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the440","title":"case the440","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the64","title":"case the64","type":"case"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/the8","title":"case the8","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalspacing\/codingkeys","title":"CharcoalSpacing.CodingKeys","type":"enum"}],"path":"\/documentation\/charcoal\/charcoalspacing","title":"CharcoalSpacing","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/==(_:_:)","title":"static func == (CharcoalSpinner, CharcoalSpinner) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/init(spinnersize:transparentbackground:)","title":"init(spinnerSize: CGFloat, transparentBackground: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-3bli2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-6283n","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-5mopx","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9ifet","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9l7pz","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-14iev","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-969lq","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:isenabled:)-7u9ff","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:isenabled:)-u9pg","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-15v1e","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-2cec7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-3j120","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-48h02","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-69t8a","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-88ktc","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-dkis","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-szmc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:)-49omv","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:)-6kuke","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:)-6vtoq","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:isenabled:)-2f2jo","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:isenabled:)-8i686","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:isenabled:)-ckth","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:)-2l8a7","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:)-54dhk","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:)-cksw","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:isenabled:)-124yd","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:isenabled:)-3ujwj","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:isenabled:)-471sx","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-25tbs","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-5ugzd","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-6dpl4","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:isenabled:)-3b704","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:isenabled:)-6lwv2","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:isenabled:)-96afu","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-13zxl","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-5ysli","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-64j60","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:isenabled:)-7115f","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:isenabled:)-7feij","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:isenabled:)-8ltmz","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-3c6t","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-7n6ps","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-9fy31","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:isenabled:)-44t5e","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:isenabled:)-78rqs","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:isenabled:)-8aii7","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-33a8f","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3k5pc","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nl01","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nzib","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5q9h6","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5zl7l","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-8bywk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-9y6b4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-2qvws","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-6pxjz","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8dnax","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8pkx5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-4w8uz","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-5eucc","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vd6j","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vew7","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-1oc51","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-8zzpn","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-fx6c","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:isenabled:)-30w79","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:isenabled:)-694z6","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:isenabled:)-xuub","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-36739","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-5ggaz","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-7i93d","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7l0xm","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7vpng","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-9vido","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-36jkv","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-39z0z","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-3p90i","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-2djj","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-424ue","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-6ai0e","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-8d2pq","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-9xwt","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-2npgx","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-9yja2","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-8pmr4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-ank1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-3y43p","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-4hhc3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-21lng","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-58naw","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-5hmkn","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-a627","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-7ovrn","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-8ik25","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1qzvm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-61ngc","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-923uf","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1l1je","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3jqti","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8a967","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-39sj5","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5o2rs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7tiov","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4j4hc","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8rpe0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8xy7g","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-4vvu3","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-8x2hw","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttoolbar(for:content:)-4rz0h","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttoolbar(for:content:)-53mi3","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaulthovereffect(_:)-5d3bo","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaulthovereffect(_:)-68mik","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-5kbsg","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-7jjhf","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-89809","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dynamictypesize(_:)-3u7zu","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dynamictypesize(_:)-6maxl","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-1o80z","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-3m18k","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-56093","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-6r9ej","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-7jft","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-wz0c","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2za39","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7u6gv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-18sb9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8znx2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2v7w3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-78qb6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5lh7b","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7qhd9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-1oqak","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-4cw3d","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-6aijz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-4gba","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-5ihay","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-49hd4","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-7ysej","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-5t3a5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-96zs7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5sdtb","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5wamw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-1rjx","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6elgk","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6vjx8","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:isenabled:)-6usn","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:isenabled:)-8zpu3","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-6t1up","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-88oyd","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-2jw95","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-5onb5","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-3mr04","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-4s9ge","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-5s1yy","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-14q5e","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-1lcv6","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-9jnty","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:)-21um4","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:)-6r9jq","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-452eo","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-5qm9h","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-68w18","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-6qswn","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1a44e","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1bq4c","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-4vw8c","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-5jwe2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-6nd8r","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-1luzq","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-6gvks","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinuoushover(coordinatespace:perform:)-5i4xd","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinuoushover(coordinatespace:perform:)-6a9nu","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-3qhkd","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-8vroa","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-1n8x4","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7hwxz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7kpyt","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-q3zp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ongeometrychange(for:of:action:)-2ewc0","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ongeometrychange(for:of:action:)-2fqca","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollphasechange(_:)-8bxbr","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollphasechange(_:)-xi18","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:coordinatespace:perform:)-2ha54","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:coordinatespace:perform:)-640k5","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-4t2ju","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-9e2nn","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-3umh4","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-7tlmo","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-56ksz","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-8yzir","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-28mxu","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-76gyw","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-19sak","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-3mq02","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchcompletion(_:)-1smkc","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchcompletion(_:)-83n02","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1colq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-57n59","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7j6up","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-45w2l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4b19y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4jc5r","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-5kai4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-6o64a","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-pfhc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-2yw7k","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-36u48","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-65rfi","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-57csl","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-61b6i","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-7h13m","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-1ydv9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-3iv81","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-6i260","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-1paxk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-8c9ej","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-tbee","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8c07e","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9emoe","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9h85m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1xcjb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-77hdg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9my4f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tint(_:)-5ax0b","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tint(_:)-76q7f","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-4z6xi","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-70r1l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackground(_:for:)-22fgz","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackground(_:for:)-40xp9","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-34sey","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-5gt6n","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-7gwdc","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-1wqhf","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-3venk","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-3bli2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-6283n","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-5mopx","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9ifet","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9l7pz","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-14iev","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-969lq","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:isenabled:)-7u9ff","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:isenabled:)-u9pg","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-15v1e","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-2cec7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-3j120","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-48h02","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-69t8a","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-88ktc","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-dkis","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-szmc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:)-49omv","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:)-6kuke","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:)-6vtoq","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:isenabled:)-2f2jo","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:isenabled:)-8i686","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydragpoint(_:description:isenabled:)-ckth","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:)-2l8a7","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:)-54dhk","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:)-cksw","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:isenabled:)-124yd","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:isenabled:)-3ujwj","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydroppoint(_:description:isenabled:)-471sx","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-25tbs","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-5ugzd","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-6dpl4","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:isenabled:)-3b704","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:isenabled:)-6lwv2","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:isenabled:)-96afu","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-13zxl","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-5ysli","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-64j60","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:isenabled:)-7115f","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:isenabled:)-7feij","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:isenabled:)-8ltmz","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-3c6t","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-7n6ps","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-9fy31","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:isenabled:)-44t5e","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:isenabled:)-78rqs","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:isenabled:)-8aii7","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-33a8f","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3k5pc","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nl01","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nzib","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5q9h6","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5zl7l","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-8bywk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-9y6b4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-2qvws","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-6pxjz","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8dnax","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8pkx5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-4w8uz","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-5eucc","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vd6j","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vew7","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-1oc51","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-8zzpn","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-fx6c","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:isenabled:)-30w79","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:isenabled:)-694z6","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:isenabled:)-xuub","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-36739","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-5ggaz","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-7i93d","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7l0xm","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7vpng","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-9vido","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-36jkv","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-39z0z","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-3p90i","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-2djj","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-424ue","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-6ai0e","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-8d2pq","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-9xwt","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-2npgx","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-9yja2","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-8pmr4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-ank1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-3y43p","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-4hhc3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-21lng","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-58naw","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-5hmkn","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-a627","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-7ovrn","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-8ik25","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1qzvm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-61ngc","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-923uf","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1l1je","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3jqti","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8a967","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-39sj5","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5o2rs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7tiov","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4j4hc","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8rpe0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8xy7g","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-4vvu3","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-8x2hw","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttoolbar(for:content:)-4rz0h","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttoolbar(for:content:)-53mi3","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaulthovereffect(_:)-5d3bo","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaulthovereffect(_:)-68mik","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-5kbsg","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-7jjhf","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-89809","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dynamictypesize(_:)-3u7zu","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dynamictypesize(_:)-6maxl","title":"func dynamicTypeSize<T>(T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-1o80z","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-3m18k","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-56093","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-6r9ej","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-7jft","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-wz0c","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2za39","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7u6gv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-18sb9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8znx2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2v7w3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-78qb6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5lh7b","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7qhd9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-1oqak","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-4cw3d","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-6aijz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-4gba","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-5ihay","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-49hd4","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-7ysej","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-5t3a5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-96zs7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5sdtb","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5wamw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-1rjx","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6elgk","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6vjx8","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:isenabled:)-6usn","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:isenabled:)-8zpu3","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-6t1up","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-88oyd","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-2jw95","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-5onb5","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-3mr04","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-4s9ge","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-5s1yy","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-14q5e","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-1lcv6","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-9jnty","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:)-21um4","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:)-6r9jq","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-452eo","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-5qm9h","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-68w18","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-6qswn","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1a44e","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1bq4c","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-4vw8c","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-5jwe2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-6nd8r","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-1luzq","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-6gvks","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinuoushover(coordinatespace:perform:)-5i4xd","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinuoushover(coordinatespace:perform:)-6a9nu","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-3qhkd","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-8vroa","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-1n8x4","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7hwxz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7kpyt","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-q3zp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ongeometrychange(for:of:action:)-2ewc0","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ongeometrychange(for:of:action:)-2fqca","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollphasechange(_:)-8bxbr","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollphasechange(_:)-xi18","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:coordinatespace:perform:)-2ha54","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:coordinatespace:perform:)-640k5","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-4t2ju","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-9e2nn","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-3umh4","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-7tlmo","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-56ksz","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-8yzir","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-28mxu","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-76gyw","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-19sak","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-3mq02","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchcompletion(_:)-1smkc","title":"func searchCompletion<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchcompletion(_:)-83n02","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1colq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-57n59","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7j6up","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-45w2l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4b19y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4jc5r","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-5kai4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-6o64a","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-pfhc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-2yw7k","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-36u48","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-65rfi","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-57csl","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-61b6i","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-7h13m","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-1ydv9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-3iv81","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-6i260","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-1paxk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-8c9ej","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-tbee","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8c07e","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9emoe","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9h85m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1xcjb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-77hdg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9my4f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tint(_:)-5ax0b","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tint(_:)-76q7f","title":"func tint<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-4z6xi","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-70r1l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackground(_:for:)-22fgz","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackground(_:for:)-40xp9","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-34sey","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-5gt6n","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-7gwdc","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-1wqhf","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-3venk","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct","title":"CharcoalSpinner","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/body(content:)","title":"func body(content: CharcoalSpinnerModifier.Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalspinnermodifier","title":"CharcoalSpinnerModifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalthe12\/init(_:using:)","title":"init(String, using: String.Encoding) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalthe12\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalthe12\/init(fontsize:lineheight:)","title":"init(fontSize: Int, lineHeight: Int)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalthe12\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoalthe12\/init(fromurl:)","title":"init(fromURL: URL) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalthe12\/fontsize","title":"let fontSize: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoalthe12\/lineheight","title":"let lineHeight: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalthe12\/jsondata()","title":"func jsonData() throws -> Data","type":"method"},{"path":"\/documentation\/charcoal\/charcoalthe12\/jsonstring(encoding:)","title":"func jsonString(encoding: String.Encoding) throws -> String?","type":"method"},{"path":"\/documentation\/charcoal\/charcoalthe12\/with(fontsize:lineheight:)","title":"func with(fontSize: Int?, lineHeight: Int?) -> CharcoalThe12","type":"method"}],"path":"\/documentation\/charcoal\/charcoalthe12","title":"CharcoalThe12","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/init(enablepositionanimation:animation:)","title":"init(enablePositionAnimation: Bool, animation: Animation)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/animation","title":"let animation: Animation","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/enablepositionanimation","title":"let enablePositionAnimation: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/default","title":"static let `default`: CharcoalToastAnimationConfiguration","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration","title":"CharcoalToastAnimationConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography\/init(_:using:)","title":"init(String, using: String.Encoding) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoaltypography\/init(data:)","title":"init(data: Data) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoaltypography\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoaltypography\/init(fromurl:)","title":"init(fromURL: URL) throws","type":"init"},{"path":"\/documentation\/charcoal\/charcoaltypography\/init(size:)","title":"init(size: CharcoalSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography\/size","title":"let size: CharcoalSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography\/jsondata()","title":"func jsonData() throws -> Data","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltypography\/jsonstring(encoding:)","title":"func jsonString(encoding: String.Encoding) throws -> String?","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltypography\/with(size:)","title":"func with(size: CharcoalSize?) -> CharcoalTypography","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltypography","title":"CharcoalTypography","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/imageasset\/image-swift.property","title":"var image: ImageAsset.Image","type":"property"},{"path":"\/documentation\/charcoal\/imageasset\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/charcoal\/imageasset\/swiftuiimage","title":"var swiftUIImage: Image","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/imageasset\/image(compatiblewith:)","title":"func image(compatibleWith: UITraitCollection) -> ImageAsset.Image","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/imageasset\/image-swift.typealias","title":"ImageAsset.Image","type":"typealias"}],"path":"\/documentation\/charcoal\/imageasset","title":"ImageAsset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/layoutpriority\/init(priority:spacearea:)","title":"init(priority: CharcoalTooltipLayoutPriority, spaceArea: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/layoutpriority\/priority","title":"var priority: CharcoalTooltipLayoutPriority","type":"property"},{"path":"\/documentation\/charcoal\/layoutpriority\/rect","title":"var rect: CGRect","type":"property"},{"path":"\/documentation\/charcoal\/layoutpriority\/spacearea","title":"var spaceArea: CGSize","type":"property"}],"path":"\/documentation\/charcoal\/layoutpriority","title":"LayoutPriority","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalfoundation-swift.var","title":"let charcoalFoundation: CharcoalFoundation","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/actioncallback","title":"ActionCallback","type":"typealias"},{"path":"\/documentation\/charcoal\/assetcolortypealias","title":"AssetColorTypeAlias","type":"typealias"},{"path":"\/documentation\/charcoal\/assetimagetypealias","title":"AssetImageTypeAlias","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/assertive","title":"case assertive","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/background1","title":"case background1","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/background2","title":"case background2","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/border","title":"case border","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/brand","title":"case brand","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/calltoaction0","title":"case callToAction0","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/calltoaction100","title":"case callToAction100","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/icon6","title":"case icon6","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/link1","title":"case link1","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/link2","title":"case link2","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/success","title":"case success","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface1","title":"case surface1","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface10","title":"case surface10","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface2","title":"case surface2","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface3","title":"case surface3","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface4","title":"case surface4","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface50","title":"case surface50","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface5100","title":"case surface5100","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface6","title":"case surface6","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface7","title":"case surface7","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface8","title":"case surface8","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/surface9","title":"case surface9","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/text1","title":"case text1","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/text2","title":"case text2","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/text3","title":"case text3","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/text4","title":"case text4","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/text5","title":"case text5","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/transparent","title":"case transparent","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/updateditem","title":"case updatedItem","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/warning","title":"case warning","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/color","title":"var color: ColorAsset.Color","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/colorasset","title":"var colorAsset: ColorAsset","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalasset\/colorpalettegenerated","title":"CharcoalAsset.ColorPaletteGenerated","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/add16","title":"case add16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/add24","title":"case add24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/addimage24","title":"case addImage24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/addinline","title":"case addInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/addmodel24","title":"case addModel24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/addpeople24","title":"case addPeople24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/addrubi24","title":"case addRubi24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/addtext24","title":"case addText24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/alart24","title":"case alart24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/announcement24","title":"case announcement24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/ar24","title":"case ar24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/archive16","title":"case archive16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/archive24","title":"case archive24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/arrowdown16","title":"case arrowDown16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/arrowdown24","title":"case arrowDown24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/arrowup24","title":"case arrowUp24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/artwork16","title":"case artwork16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/back16","title":"case back16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/backinline","title":"case backInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/binet24","title":"case binet24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/body24","title":"case body24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bodyedit24","title":"case bodyEdit24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/book16","title":"case book16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/book24","title":"case book24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bookmarkoff16","title":"case bookmarkOff16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bookmarkoff32","title":"case bookmarkOff32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bookmarkoffinline","title":"case bookmarkOffInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bookmarkon16","title":"case bookmarkOn16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bookmarkon32","title":"case bookmarkOn32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bookmarkoninline","title":"case bookmarkOnInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/breadcrumbsinline","title":"case breadcrumbsInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bringbackward24","title":"case bringBackward24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/bringforward24","title":"case bringForward24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/calendar24","title":"case calendar24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/camera24","title":"case camera24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/camera32","title":"case camera32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/cameravideo24","title":"case cameraVideo24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/cart24","title":"case cart24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/changecharacter24","title":"case changeCharacter24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/chatbot24","title":"case chatBot24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/check16","title":"case check16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/check24","title":"case check24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/checkinline","title":"case checkInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/chromaticaberration24","title":"case chromaticAberration24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/click24","title":"case click24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/close24","title":"case close24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/close32","title":"case close32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/codes24","title":"case codes24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/collapse24","title":"case collapse24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/collapse32","title":"case collapse32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/collection24","title":"case collection24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/comment16","title":"case comment16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/commentfill24","title":"case commentFill24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/commentinline","title":"case commentInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/commentoff32","title":"case commentOff32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/commenton32","title":"case commentOn32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/commentoutline24","title":"case commentOutline24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/contest24","title":"case contest24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/contextmenuinline","title":"case contextMenuInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/contrast24","title":"case contrast24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/delete32","title":"case delete32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/description24","title":"case description24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/devicerotation24","title":"case deviceRotation24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/discovery24","title":"case discovery24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/dot16","title":"case dot16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/dot24","title":"case dot24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/dot32","title":"case dot32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/dotalt24","title":"case dotAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/down24","title":"case down24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/downloadalt24","title":"case downloadAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/duplicate24","title":"case duplicate24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/dust24","title":"case dust24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/edit32","title":"case edit32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/emoji24","title":"case emoji24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/error16","title":"case error16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/error24","title":"case error24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/erroroctagon24","title":"case errorOctagon24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/events24","title":"case events24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/expand24","title":"case expand24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/expand32","title":"case expand32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/externalinline","title":"case externalInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/faceedit24","title":"case faceEdit24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/fashion24","title":"case fashion24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/feed24","title":"case feed24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/file24","title":"case file24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/filter16","title":"case filter16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/filter24","title":"case filter24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/filterinline","title":"case filterInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/flare24","title":"case flare24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/folderinline","title":"case folderInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formataligncenter24","title":"case formatAlignCenter24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatalignjustified24","title":"case formatAlignJustified24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatalignleft24","title":"case formatAlignLeft24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatalignright24","title":"case formatAlignRight24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatcolorfill24","title":"case formatColorFill24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatcolorfillnocolor24","title":"case formatColorFillNoColor24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatfontfamily24","title":"case formatFontFamily24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatfontsize24","title":"case formatFontSize24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatletterspacing24","title":"case formatLetterSpacing24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/formatlinespacing24","title":"case formatLineSpacing24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/fov24","title":"case fov24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/frameeffect24","title":"case frameEffect24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/framesize24","title":"case frameSize24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/gift24","title":"case gift24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/gift32","title":"case gift32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/glow24","title":"case glow24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/groups24","title":"case groups24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/hairedit24","title":"case hairEdit24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/hashtag24","title":"case hashtag24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/hide24","title":"case hide24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/hightlighttext24","title":"case hightlightText24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/home24","title":"case home24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/home32","title":"case home32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/horizontalwriting32","title":"case horizontalWriting32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/hue24","title":"case hue24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/idea24","title":"case idea24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/image24","title":"case image24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imagealt24","title":"case imageAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imagehidden24","title":"case imageHidden24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imagehidden32","title":"case imageHidden32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imagereplace24","title":"case imageReplace24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imageresponse16","title":"case imageResponse16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imageresponseinline","title":"case imageResponseInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/images24","title":"case images24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imagesinline","title":"case imagesInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imgcontain24","title":"case imgContain24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imgcover24","title":"case imgCover24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/index24","title":"case index24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/index32","title":"case index32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/info16","title":"case info16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/info24","title":"case info24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/invalid24","title":"case invalid24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/invoice24","title":"case invoice24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/itemremove24","title":"case itemRemove24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/latestinline","title":"case latestInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/latestworks24","title":"case latestWorks24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/like16","title":"case like16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/likeinline","title":"case likeInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/likeoff24","title":"case likeOff24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/likeoff32","title":"case likeOff32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/likeoffinline","title":"case likeOffInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/likeon24","title":"case likeOn24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/likeon32","title":"case likeOn32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/likeonprivate32","title":"case likeOnPrivate32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/link24","title":"case link24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/list24","title":"case list24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/listinline","title":"case listInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/locationinline","title":"case locationInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/lockinline","title":"case lockInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/locklock24","title":"case lockLock24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/lockunlock24","title":"case lockUnlock24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/logout24","title":"case logout24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/manga24","title":"case manga24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/menu16","title":"case menu16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/menu24","title":"case menu24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/message24","title":"case message24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/message32","title":"case message32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/microphone24","title":"case microphone24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/mobilephone24","title":"case mobilePhone24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/more16","title":"case more16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/moreinline","title":"case moreInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/move124","title":"case move124","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/multiselect24","title":"case multiSelect24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/multiselectinline","title":"case multiSelectInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/next24","title":"case next24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/next32","title":"case next32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/nextworks16","title":"case nextworks16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/nextworksinline","title":"case nextworksInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/noimage24","title":"case noImage24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/notification24","title":"case notification24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/notification32","title":"case notification32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/notificationoff24","title":"case notificationOff24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/notificationoff32","title":"case notificationOff32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/novelviewersettings32","title":"case novelViewerSettings32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/novels24","title":"case novels24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/openinnew24","title":"case openInNew24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/openinnewinline","title":"case openInNewInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/options24","title":"case options24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/optionsalt24","title":"case optionsAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/overlay24","title":"case overlay24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/palette24","title":"case palette24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pan32","title":"case pan32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pause24","title":"case pause24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pausealt24","title":"case pauseAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pencil16","title":"case pencil16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pencil24","title":"case pencil24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/penciladd24","title":"case pencilAdd24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pencildraw24","title":"case pencilDraw24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pencilinline","title":"case pencilInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pencillive24","title":"case pencilLive24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/penciltext24","title":"case pencilText24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/person24","title":"case person24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/play24","title":"case play24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pose24","title":"case pose24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/prev24","title":"case prev24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/prev32","title":"case prev32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/projects24","title":"case projects24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pulldown24","title":"case pullDown24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pulldown32","title":"case pullDown32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pullup24","title":"case pullUp24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/pullup32","title":"case pullUp32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/question16","title":"case question16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/question24","title":"case question24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/questionoutline24","title":"case questionOutline24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/ranking16","title":"case ranking16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/ranking24","title":"case ranking24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/readhorizontalleft24","title":"case readHorizontalLeft24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/readhorizontalleft32","title":"case readHorizontalLeft32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/readhorizontalright24","title":"case readHorizontalRight24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/readhorizontalright32","title":"case readHorizontalRight32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/readvertical24","title":"case readVertical24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/readvertical32","title":"case readVertical32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/redo24","title":"case redo24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/redo32","title":"case redo32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/reload24","title":"case reload24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/reloadloop24","title":"case reloadLoop24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/remove16","title":"case remove16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/removeinline","title":"case removeInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/reorder24","title":"case reorder24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/reply24","title":"case reply24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/roll24","title":"case roll24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/rollhorizontal32","title":"case rollHorizontal32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/rollvertical32","title":"case rollVertical32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/rotate90degreesc24","title":"case rotate90DegreesC24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/rotate90degreescc24","title":"case rotate90DegreesCc24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/rotateright24","title":"case rotateRight24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/sansserif32","title":"case sansSerif32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/saturation24","title":"case saturation24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/save24","title":"case save24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/search16","title":"case search16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/search24","title":"case search24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/send24","title":"case send24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/serif32","title":"case serif32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/services24","title":"case services24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/set24","title":"case set24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/settings24","title":"case settings24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/shareandroid24","title":"case shareAndroid24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/shareandroid32","title":"case shareAndroid32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/shareios24","title":"case shareIos24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/shareios32","title":"case shareIos32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/shopping24","title":"case shopping24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/shopping32","title":"case shopping32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/show24","title":"case show24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/showoutline24","title":"case showOutline24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/shutter24","title":"case shutter24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/smile16","title":"case smile16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/smileinline","title":"case smileInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/smileoninline","title":"case smileOnInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/speaker16","title":"case speaker16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/star24","title":"case star24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/subtract24","title":"case subtract24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/sun24","title":"case sun24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/temperature24","title":"case temperature24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/text24","title":"case text24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/thread24","title":"case thread24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/trash24","title":"case trash24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/trashalt24","title":"case trashAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/undo24","title":"case undo24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/undo32","title":"case undo32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/up24","title":"case up24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/upload24","title":"case upload24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/upload32","title":"case upload32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/uploadalt24","title":"case uploadAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/usagi24","title":"case usagi24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/usagialt24","title":"case usagiAlt24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/user32","title":"case user32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/users24","title":"case users24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/usersinline","title":"case usersInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/verticalwriting32","title":"case verticalWriting32","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/video24","title":"case video24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/view16","title":"case view16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/viewgrid2columns24","title":"case viewGrid2Columns24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/viewgrid3columns24","title":"case viewGrid3Columns24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/viewinline","title":"case viewInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/viewlist24","title":"case viewList24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/viewoutlineinline","title":"case viewOutlineInline","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/warning16","title":"case warning16","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/warning24","title":"case warning24","type":"case"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/zoomin32","title":"case zoomIn32","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/image","title":"var image: ImageAsset.Image","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/imageasset","title":"var imageAsset: ImageAsset","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/addasset","title":"static let addAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/backasset","title":"static let backAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/bookmarkoffasset","title":"static let bookmarkOffAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/bookmarkonasset","title":"static let bookmarkOnAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/breadcrumbsasset","title":"static let breadcrumbsAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/checkasset","title":"static let checkAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/commentasset","title":"static let commentAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/contextmenuasset","title":"static let contextMenuAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/externalasset","title":"static let externalAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/filterasset","title":"static let filterAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/folderasset","title":"static let folderAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/imageresponseasset","title":"static let imageResponseAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/imagesasset","title":"static let imagesAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/latestasset","title":"static let latestAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/likeasset","title":"static let likeAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/likeoffasset","title":"static let likeOffAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/listasset","title":"static let listAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/locationasset","title":"static let locationAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/lockasset","title":"static let lockAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/moreasset","title":"static let moreAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/multiselectasset","title":"static let multiSelectAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/nextworksasset","title":"static let nextworksAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/openinnewasset","title":"static let openInNewAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/pencilasset","title":"static let pencilAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/removeasset","title":"static let removeAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/smileasset","title":"static let smileAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/smileonasset","title":"static let smileOnAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/usersasset","title":"static let usersAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/viewasset","title":"static let viewAsset: ImageAsset","type":"property"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline\/viewoutlineasset","title":"static let viewOutlineAsset: ImageAsset","type":"property"}],"path":"\/documentation\/charcoal\/charcoalasset\/images\/inline","title":"CharcoalAsset.Images.Inline","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalasset\/images\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalasset\/images\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalasset\/images","title":"CharcoalAsset.Images","type":"enum"}],"path":"\/documentation\/charcoal\/charcoalasset","title":"CharcoalAsset","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalbuttonsize\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/charcoal\/charcoalbuttonsize\/small","title":"case small","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalbuttonsize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalbuttonsize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalbuttonsize","title":"CharcoalButtonSize","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalbuttonstyle\/configuration\/init(size:isfixed:primarycolor:)","title":"init(size: CharcoalButtonSize, isFixed: Bool, primaryColor: Color)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalbuttonstyle\/configuration\/isfixed","title":"var isFixed: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalbuttonstyle\/configuration\/primarycolor","title":"var primaryColor: Color","type":"property"},{"path":"\/documentation\/charcoal\/charcoalbuttonstyle\/configuration\/size","title":"var size: CharcoalButtonSize","type":"property"}],"path":"\/documentation\/charcoal\/charcoalbuttonstyle\/configuration","title":"CharcoalButtonStyle.Configuration","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalbuttonstyle\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/charcoal\/charcoalbuttonstyle\/primary(_:)","title":"case primary(CharcoalButtonStyle.Configuration)","type":"case"}],"path":"\/documentation\/charcoal\/charcoalbuttonstyle","title":"CharcoalButtonStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalmodalstyle\/bottomsheet","title":"case bottomSheet","type":"case"},{"path":"\/documentation\/charcoal\/charcoalmodalstyle\/center","title":"case center","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalmodalstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalmodalstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalmodalstyle","title":"CharcoalModalStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/block","title":"case block","type":"case"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/dimissontouch","title":"case dimissOnTouch","type":"case"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/passthrough","title":"case passThrough","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode","title":"CharcoalOverlayInteractionMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalpopupviewedge\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/charcoal\/charcoalpopupviewedge\/top","title":"case top","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalpopupviewedge\/direction","title":"var direction: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalpopupviewedge\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalpopupviewedge\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalpopupviewedge","title":"CharcoalPopupViewEdge","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastappearance\/error","title":"case error","type":"case"},{"path":"\/documentation\/charcoal\/charcoaltoastappearance\/success","title":"case success","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastappearance\/background","title":"var background: ColorAsset.Color","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastappearance\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoaltoastappearance\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoaltoastappearance","title":"CharcoalToastAppearance","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/left","title":"case left","type":"case"},{"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/right","title":"case right","type":"case"},{"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/top","title":"case top","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/order","title":"var order: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoaltooltiplayoutpriority","title":"CharcoalTooltipLayoutPriority","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/corefoundation\/cgrect\/intersectionarea(_:)","title":"func intersectionArea(CGRect) -> CGFloat","type":"method"}],"path":"\/documentation\/charcoal\/corefoundation\/cgrect","title":"CGRect","type":"extension"}],"path":"\/documentation\/charcoal\/corefoundation","title":"CoreFoundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/shape\/fill(_:strokecolor:linewidth:)","title":"func fill<S>(S, strokeColor: Color, lineWidth: CGFloat) -> some View","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/shape\/charcoalcapsule","title":"static var charcoalCapsule: RoundedRectangle","type":"property"}],"path":"\/documentation\/charcoal\/swiftuicore\/shape","title":"Shape","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/background(charcoalcolor:ignoressafeareaedges:)","title":"func background(charcoalColor: CharcoalAsset.ColorPaletteGenerated, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalbackground1()","title":"func charcoalBackground1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalbackground2()","title":"func charcoalBackground2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalballoon(ispresenting:text:dismissafter:action:)","title":"func charcoalBalloon<Content>(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaldefaultbutton(size:isfixed:)","title":"func charcoalDefaultButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaldefaultoverlaybutton(size:isfixed:)","title":"func charcoalDefaultOverlayButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoallinkbutton()","title":"func charcoalLinkButton() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalmodal(title:style:tapbackgroundtodismiss:duration:maxwidth:ispresented:actions:content:)","title":"func charcoalModal(title: String?, style: CharcoalModalStyle, tapBackgroundToDismiss: Bool, duration: Double, maxWidth: CGFloat, isPresented: Binding<Bool>, actions: () -> some View, content: () -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalnavigationbutton(size:isfixed:)","title":"func charcoalNavigationButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfaceborder()","title":"func charcoalOnSurfaceBorder() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacelink1()","title":"func charcoalOnSurfaceLink1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacelink2()","title":"func charcoalOnSurfaceLink2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext1()","title":"func charcoalOnSurfaceText1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext2()","title":"func charcoalOnSurfaceText2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext3()","title":"func charcoalOnSurfaceText3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext4()","title":"func charcoalOnSurfaceText4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalonsurfacetext5()","title":"func charcoalOnSurfaceText5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaloverlaycontainer()","title":"func charcoalOverlayContainer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalprimarybutton(size:isfixed:primarycolor:)","title":"func charcoalPrimaryButton(size: CharcoalButtonSize, isFixed: Bool, primaryColor: Color) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsnackbar(ispresenting:screenedge:screenedgespacing:text:thumbnailimage:dismissafter:action:)","title":"func charcoalSnackBar<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, thumbnailImage: Image?, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalspinner(ispresenting:spinnersize:transparentbackground:interactionpassthrough:)","title":"func charcoalSpinner(isPresenting: Binding<Bool>, spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface1()","title":"func charcoalSurface1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface2()","title":"func charcoalSurface2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface3()","title":"func charcoalSurface3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface4()","title":"func charcoalSurface4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface5()","title":"func charcoalSurface5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface6()","title":"func charcoalSurface6() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface7()","title":"func charcoalSurface7() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface8()","title":"func charcoalSurface8() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoalsurface9()","title":"func charcoalSurface9() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltextfield(label:countlabel:assistivetext:haserror:)","title":"func charcoalTextField(label: Binding<String>, countLabel: Binding<String>, assistiveText: Binding<String>, hasError: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltoast(ispresenting:screenedge:screenedgespacing:text:dismissafter:appearance:animationconfiguration:action:)","title":"func charcoalToast<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, dismissAfter: TimeInterval?, appearance: CharcoalToastAppearance, animationConfiguration: CharcoalToastAnimationConfiguration, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltoggle()","title":"func charcoalToggle() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltooltip(ispresenting:text:dismissafter:)","title":"func charcoalTooltip(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10bold(issingleline:)","title":"func charcoalTypography10Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10boldmono()","title":"func charcoalTypography10BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10regular(issingleline:)","title":"func charcoalTypography10Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography10regularmono()","title":"func charcoalTypography10RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12bold(issingleline:)","title":"func charcoalTypography12Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12boldmono()","title":"func charcoalTypography12BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12regular(issingleline:)","title":"func charcoalTypography12Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography12regularmono()","title":"func charcoalTypography12RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14bold(issingleline:)","title":"func charcoalTypography14Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14boldmono()","title":"func charcoalTypography14BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14regular(issingleline:)","title":"func charcoalTypography14Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography14regularmono()","title":"func charcoalTypography14RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16bold(issingleline:)","title":"func charcoalTypography16Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16boldmono()","title":"func charcoalTypography16BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16regular(issingleline:)","title":"func charcoalTypography16Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography16regularmono()","title":"func charcoalTypography16RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20bold(issingleline:)","title":"func charcoalTypography20Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20boldmono()","title":"func charcoalTypography20BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20regular(issingleline:)","title":"func charcoalTypography20Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/charcoaltypography20regularmono()","title":"func charcoalTypography20RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/view\/foregroundstyle(charcoalcolor:)","title":"func foregroundStyle(charcoalColor: CharcoalAsset.ColorPaletteGenerated) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/swiftuicore\/view","title":"View","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/color\/init(asset:)","title":"init(asset: ColorAsset)","type":"init"}],"path":"\/documentation\/charcoal\/swiftuicore\/color","title":"Color","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/image\/init(asset:)","title":"init(asset: ImageAsset)","type":"init"},{"path":"\/documentation\/charcoal\/swiftuicore\/image\/init(asset:label:)","title":"init(asset: ImageAsset, label: Text)","type":"init"},{"path":"\/documentation\/charcoal\/swiftuicore\/image\/init(charcoalicon:)","title":"init(charcoalIcon: CharcoalAsset.Images)","type":"init"},{"path":"\/documentation\/charcoal\/swiftuicore\/image\/init(decorative:)","title":"init(decorative: ImageAsset)","type":"init"}],"path":"\/documentation\/charcoal\/swiftuicore\/image","title":"Image","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/font(charcoaltypography:)","title":"func font(charcoalTypography: Text.CharcoalTypography) -> Text","type":"method"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/foregroundstyle(charcoalcolor:)","title":"func foregroundStyle(charcoalColor: CharcoalAsset.ColorPaletteGenerated) -> Text","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/bold10","title":"case bold10","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/bold12","title":"case bold12","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/bold14","title":"case bold14","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/bold16","title":"case bold16","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/bold20","title":"case bold20","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/regular10","title":"case regular10","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/regular12","title":"case regular12","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/regular14","title":"case regular14","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/regular16","title":"case regular16","type":"case"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/regular20","title":"case regular20","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/swiftuicore\/text\/charcoaltypography","title":"Text.CharcoalTypography","type":"enum"}],"path":"\/documentation\/charcoal\/swiftuicore\/text","title":"Text","type":"extension"}],"path":"\/documentation\/charcoal\/swiftuicore","title":"SwiftUICore","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/uikit\/uicolor\/init(asset:)","title":"convenience init?(asset: ColorAsset)","type":"init"}],"path":"\/documentation\/charcoal\/uikit\/uicolor","title":"UIColor","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/uikit\/uiimage\/init(asset:)","title":"convenience init?(asset: ImageAsset)","type":"init"}],"path":"\/documentation\/charcoal\/uikit\/uiimage","title":"UIImage","type":"extension"}],"path":"\/documentation\/charcoal\/uikit","title":"UIKit","type":"extension"}],"icon":"charcoal-icon.png","path":"\/documentation\/charcoal","title":"Charcoal","type":"module"}]},"references":{"charcoal-icon.png":{"alt":"A technology icon representing the Charcoal framework.","identifier":"charcoal-icon.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/charcoal-ios.Charcoal\/charcoal-icon.png"},{"traits":["1x","dark"],"url":"\/images\/charcoal-ios.Charcoal\/charcoal-icon~dark.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":2}}